// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int            @id @default(autoincrement())
  name         String
  email        String         @unique
  password     String
  role         String         @default("USER") // USER, ADMIN
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  deletedAt    DateTime?
  FamilyMember FamilyMember[]
}

enum Gender {
  MALE
  FEMALE
  NON_BINARY
  OTHER
}

enum RelationshipType {
  PARENT
  CHILD
  SPOUSE
  SIBLING
  OTHER
}
model FamilyMember {
  id          Int          @id @default(autoincrement())
  firstName   String
  lastName    String
  birthDate   DateTime
  deathDate   DateTime?
  gender      Gender
  createdBy   User         @relation(fields: [createdById], references: [id])
  createdById Int
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  deletedAt   DateTime?
  relationships1 FamilyRelationship[] @relation("Member1Relationships")
  relationships2 FamilyRelationship[] @relation("Member2Relationships")
}

model FamilyRelationship {
  id               Int              @id @default(autoincrement())
  familyMember1Id  Int
  familyMember2Id  Int
  relationshipType RelationshipType
  familyMember1    FamilyMember     @relation("Member1Relationships", fields: [familyMember1Id], references: [id])
  familyMember2    FamilyMember     @relation("Member2Relationships", fields: [familyMember2Id], references: [id])
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @updatedAt
  @@unique([familyMember1Id, familyMember2Id, relationshipType])
}

